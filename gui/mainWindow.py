# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

import filetype
import os

# qrc文件
import resource

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QMessageBox, QGraphicsPixmapItem, QGraphicsScene

# 消息框
from main import face_similar


def show_message(information):
    msg_box = QMessageBox(QMessageBox.Information, 'Warning', information, QMessageBox.Ok)
    msg_box.exec_()


def show_face(face, pos):
    image = QPixmap()
    image.load(face)
    item = QGraphicsPixmapItem()
    item.setPixmap(QPixmap(image))
    pos.scene = QGraphicsScene()
    pos.scene.addItem(item)
    pos.setScene(pos.scene)
    pos.fitInView(QGraphicsPixmapItem(QPixmap(image)))
    QtWidgets.QApplication.processEvents()


class Ui_FaceBuddhaIdentificationSystem(object):
    prepare = ""

    def setupUi(self, FaceBuddhaIdentificationSystem):
        FaceBuddhaIdentificationSystem.setObjectName("FaceBuddhaIdentificationSystem")
        FaceBuddhaIdentificationSystem.resize(1040, 769)
        FaceBuddhaIdentificationSystem.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.centralwidget = QtWidgets.QWidget(FaceBuddhaIdentificationSystem)
        self.centralwidget.setStyleSheet("#centralwidget{border-image:url(:/images/background.jpg);}")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(-1, -1, 0, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ink Free")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_1.setFont(font)
        self.label_1.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.label_1.setObjectName("label_1")
        self.horizontalLayout_2.addWidget(self.label_1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ink Free")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.human_face = QtWidgets.QGraphicsView(self.centralwidget)
        self.human_face.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.human_face.setObjectName("human_face")
        self.horizontalLayout.addWidget(self.human_face)
        self.buddha_face = QtWidgets.QGraphicsView(self.centralwidget)
        self.buddha_face.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.buddha_face.setObjectName("buddha_face")
        self.horizontalLayout.addWidget(self.buddha_face)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.button_select = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ink Free")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.button_select.setFont(font)
        self.button_select.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.button_select.setObjectName("button_select")
        self.horizontalLayout_3.addWidget(self.button_select)
        self.button_identify = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ink Free")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.button_identify.setFont(font)
        self.button_identify.setStyleSheet("background-color:rgb(255, 255, 255, 0.5);")
        self.button_identify.setObjectName("button_identify")
        self.horizontalLayout_3.addWidget(self.button_identify)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        FaceBuddhaIdentificationSystem.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(FaceBuddhaIdentificationSystem)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1040, 26))
        self.menubar.setObjectName("menubar")
        FaceBuddhaIdentificationSystem.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(FaceBuddhaIdentificationSystem)
        self.statusbar.setObjectName("statusbar")
        FaceBuddhaIdentificationSystem.setStatusBar(self.statusbar)

        # 信号和槽
        self.button_select.clicked.connect(self.select_human_face)
        self.button_identify.clicked.connect(self.identify_buddha_face)

        self.retranslateUi(FaceBuddhaIdentificationSystem)
        QtCore.QMetaObject.connectSlotsByName(FaceBuddhaIdentificationSystem)

    def retranslateUi(self, FaceBuddhaIdentificationSystem):
        _translate = QtCore.QCoreApplication.translate
        FaceBuddhaIdentificationSystem.setWindowTitle(
            _translate("FaceBuddhaIdentificationSystem", "Face Buddha Identification System"))
        self.label_1.setText(_translate("FaceBuddhaIdentificationSystem", "The Photo Will Be Identified."))
        self.label_2.setText(_translate("FaceBuddhaIdentificationSystem", "The Result of Identification."))
        self.button_select.setText(_translate("FaceBuddhaIdentificationSystem", "SELECT"))
        self.button_identify.setText(_translate("FaceBuddhaIdentificationSystem", "IDENTIFY"))

    # 点击select按钮触发，选择一个图片并显示在左侧
    def select_human_face(self):
        human_face, file_type = QtWidgets.QFileDialog.getOpenFileName(None, "Select human face image", os.getcwd(),
                                                                      "Images (*.png *.xpm *.jpg);;All Files(*)")
        kind = filetype.guess(human_face)
        if kind is not None:
            s = kind.mime
            if s.split("/")[0] == "image":
                self.prepare = human_face
                # 显示要识别的图片到左侧
                print(human_face)
                show_face(human_face, self.human_face)
            else:
                print("Wrong file type!")
                self.prepare = ""
                show_message('Wrong file type!\nPlease select again.')

    # 点击identify按钮触发，对选择的图片进行识别，将识别结果显示在右侧
    def identify_buddha_face(self):
        if self.prepare == "":
            print("Please select a photo.")
            show_message('No photo was selected!\nPlease select one.')
        else:
            # 获取识别结果
            buddha_face = face_similar(self.prepare)
            # 闪几个图片在右侧表示加载
            print("Identification in progress...")
            for root, dirs, files in os.walk('faces/buddhism/'):
                for file in files:
                    time.sleep(0.2)
                    show_face(os.path.join(root, file), self.buddha_face)
            # 将识别结果显示在右侧
            print(buddha_face)
            show_face(buddha_face, self.buddha_face)
